NIVELL 1
1. Escriu una consulta per mostrar tots els documents en la colleccié6 Restaurants 

	db.restaurants.find( {} )
	
2. Escriu una consulta per mostrar el restaurant_id, name, borough i cuisine per tots els documents en la collecció Restaurants
db = db.getSiblingDB("local");
db.getCollection("restaurants").find({}, 
    { 
        "name" : 1.0, 
        "borough" : 1.0, 
        "cuisine" : 1.0, 
        "restaurant_id" : 1.0
    }
);

3. Escriu una consulta per mostrar el restaurant_id, name, borough i cuisine, pero excloure el camp _id per tots
els documents en la collecci6 Restaurants

db.getCollection("restaurants").find({},
    {
        "_id": 0,
        "name": 1.0,
        "borough": 1.0,
        "cuisine": 1.0,
        "restaurant_id": 1.0
    }
);

4. Escriu una consulta per mostrar restaurant_id, name, borough i zip code, pero excloure el camp _id per tots
els documents en la collecci6 Restaurants

db.getCollection("restaurants").find({},
    {
        "_id": 0,
        "name": 1.0,
        "borough": 1.0,
        "address.zipcode": 1.0,
        "restaurant_id": 1.0
    }
);

5. Escriu una consulta per mostrar tot els restaurants que estan en el Bronx

db.getCollection("restaurants").find(
    { 
        "borough" : "Bronx"
    }
);
6. Escriu una consulta per mostrar els primers 5 restaurants que estan en el Bronx

db.getCollection("restaurants").find(
    { 
        "borough" : "Bronx"
    }
).sort(
    { 
        "_id" : 1.0
    }
).limit(5);

7. Escriu una consulta per mostrar el proxim 5 restaurants després de saltar els primers 5 del Bronx

db = db.getSiblingDB("local");
db.getCollection("restaurants").find(
    { 
        "borough" : "Bronx"
    }
).sort(
    { 
        "_id" : 1.0
    }
).skip(5).limit(5);

8. Escriu una consulta per trobar els restaurants que tenen un score de més de 90

db.getCollection("restaurants").find(
    { 
        "grades.score" : { 
            "$gt" : NumberInt(90)
        }
    }, 
    { 
        "restaurant_id" : 1.0, 
        "name" : 1.0, 
        "grades" : 1.0, 
        "_id" : 1.0
    }
);


9. Escriu una consulta per trobar els restaurants que tenen un score de més que 80 perd menys que 100

db.getCollection("restaurants").find({
    "grades":
        {
            $elemMatch: {
                score: {
                    "$gt": NumberInt(80), "$lt": NumberInt(100)
                }
            }
        }
}
);

10. Escriu una consulta per trobar els restaurants quins localitzen en valor de latitud menys que -95.754168

db.getCollection("restaurants").find(
    { 
        "address.coord.0" : { 
            "$lt" : -95.754168
        }
    }
);

11. Escriu una consulta de MongoDB per a trobar els restaurants que no preparen cap cuisine de 'American' i el
seu puntaje de qualificacié superior a 70 i latitud inferior a -65.754168


db.getCollection("restaurants").find(
    { 
        "cuisine" : { 
            "$ne" : "American "
        }, 
        "grades.score" : { 
            "$gt" : NumberInt(70)
        }, 
        "address.coord.0" : { 
            "$lt" : -65.754168
        }
    }
);


12. Escriu una consulta per trobar els restaurants quins no preparen cap cuisine de 'American' i va aconseguir un
marcador més que 70 i localitzat en la longitud menys que -65.754168. Nota : Fes aquesta consulta sense
utilitzar $and operador
db.getCollection("restaurants").find(
    { 
        "cuisine" : { 
            "$ne" : "American "
        }, 
        "grades.score" : { 
            "$gt" : NumberInt(70)
        }, 
        "address.coord.1" : { 
            "$lt" : -65.754168
        }
    }
);

